<launch>
  <!-- Override robot_name argument -->
  <arg name="robot_name" default="vs087" />
  <arg name="robot_options" default="vs087_and_kinectv2" />

  <!-- Robot description argument -->
  <arg name="robot_description" value="$(arg robot_name)_description" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find state_estimate_filter_ros)/worlds/cylinder.world"/>
  </include>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <!-- <param name="robot_description" type="str" textfile="$(find denso_descriptions)/$(arg robot_description)/$(arg robot_name)/$(arg robot_name).urdf"/> -->
  <!-- <param name="robot_description" type="str" textfile="$(find denso_descriptions)/$(arg robot_description)/$(arg robot_options)/$(arg robot_options).urdf.xacro"/> -->
  <arg name="model" value="$(find state_estimate_filter_ros)/urdf/$(arg robot_name)/$(arg robot_options).gazebo.xacro"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>

  <!-- robot_state_publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher"
  type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/$(arg robot_name)/joint_states" />
  </node>

  <arg name="gui" default="true"/>
  <param name="use_gui" value="$(arg gui)"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name)" />

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find state_estimate_filter_ros)/config/display_depth.rviz" required="true" />
</launch>
